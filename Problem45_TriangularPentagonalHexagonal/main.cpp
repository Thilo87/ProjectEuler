/*

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

*/

#include <iostream>
using namespace std ;

unsigned long long T( unsigned long long n )
{
	if ( n % 2 == 0 )
		return ( n / 2 ) * ( n + 1 ) ;
	else
		return n * ( ( n + 1 ) / 2 ) ;
}

unsigned long long P( unsigned long long n )
{
	if ( n % 2 == 0 )
		return ( n / 2 ) * ( 3 * n - 1 ) ;
	else
		return n * ( ( 3 * n - 1 ) / 2 ) ;
}

unsigned long long h( unsigned long long a )
{
	return ( 1 + a ) / 2 ;
}



int main ()
{
	for ( int t = 1 ;  t < 100000 ;  t += 2 )
		for ( int p = 1 ;  p <= t ;  ++p )
			if ( T( t ) == P( p ) )
				cout << "t = " << t << ", p = " << p << ", h = " << h( t ) << endl ;
		
	return 0 ;
}