/*

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk − Pj| is minimised; what is the value of D?

*/

// in the name of Jesus Christ
#include <iostream>
#include <cmath>
#include "stoppuhr.h"
using namespace std ;

unsigned long long P( unsigned int n )
{
	return n * ( 3 * n - 1 ) / 2 ;
}

int main ()
{
	stoppUhr( START ) ;

	bool loesungGefunden = false ;
	for ( int n = 1 ;  !loesungGefunden ;  ++n )
	{
		unsigned long long P_n3, P_n2 ;
		P_n2 = P( n ) ;

		int k = 1 ;
		do
		{
			P_n3 = P( n + k ) ;
			

			double n1 = ( sqrt( double( 24 * ( P_n3 - P_n2 ) + 1 ) ) + 1 ) / 6 ;
			if ( n1 == floor( n1 ) )
			{
				double n4 = ( sqrt( double( 72*n*n - 24*n - 36*(n+k)*(n+k) + 12*(n+k) + 1 ) ) + 1 ) / 6 ;
				if ( n4 == floor( n4 ) )
				{
					cout << P_n2 - P( n1 ) << endl ;
					loesungGefunden = true ;
					break ;
				}
			}

			++k ;
		}
		while ( P_n3 < 2 * P_n2 ) ;
	}
	
	cout << stoppUhr( STOPP ) << "s" << endl ;
	return 0 ;
}